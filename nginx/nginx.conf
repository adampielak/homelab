events {

}

http {
  error_log /etc/nginx/error_log.log warn;
  client_max_body_size 20m;

  proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

  include /etc/nginx/ssl.conf;

  server {
    listen 443 ssl;
    server_name sonarr.t.teich.network;
    location / {
      proxy_pass http://sonarr:8989;
    }
  }

  server {
    listen 443;
    server_name nzbget.t.teich.network;
    location / {
      proxy_pass http://nzbget:6789;
    }
  }

  server {
    listen 443;
    server_name radarr.t.teich.network;
    location / {
      proxy_pass http://radarr:7878;
    }
  }  

  server {
    listen 443;
    server_name ha.t.teich.network;
    location / {
      proxy_pass http://192.168.1.35:8123;
    }
  }  

  server {
    listen 443;
    server_name minecraft.t.teich.network;
    location / {
      proxy_pass https://192.168.1.21:8443;
    }
  }  

  server {
    listen 443;
    server_name syno.t.teich.network;
    location / {
      proxy_pass https://192.168.1.10:5001;
    }
  }  

  server {
    listen 443;
    server_name code.t.teich.network;
    location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Accept-Encoding gzip;
      proxy_pass http://code-server:8443;
#        proxy_set_header  Host 10.0.2.5:8443;
#        proxy_set_header  X-Real-IP $remote_addr;
#        proxy_set_header  X-Forwarded-Proto https;
#        proxy_set_header  X-Forwarded-For $remote_addr;
#        proxy_set_header  X-Forwarded-Host $remote_addr;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";
    }
  }  


  server {
    listen 80 default_server;

    server_name _;

    return 301 https://$host$request_uri;
  }
}
