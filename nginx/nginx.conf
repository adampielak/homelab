events {

}

http {
  error_log /etc/nginx/error_log.log warn;
  client_max_body_size 20m;

  proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

  include /etc/nginx/ssl.conf;

  server {
    listen 443 ssl;
    server_name sonarr.t.teich.network;
    location / {
      proxy_pass http://sonarr:8989;
    }
  }

  server {
    listen 443;
    server_name nzbget.t.teich.network;
    location / {
      proxy_pass http://nzbget:6789;
    }
  }

  server {
    listen 443;
    server_name radarr.t.teich.network;
    location / {
      proxy_pass http://radarr:7878;
    }
  }  

  server {
    listen 443;
    server_name ha.t.teich.network;
    location / {
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass http://ha.i.teich.network:8123;
    }
  }  

  server {
    listen 443;
    server_name minecraft.t.teich.network;
    location / {
      proxy_pass https://mineos.i.teich.network:8443;
    }
  }  

  server {
    listen 443;
    server_name syno.t.teich.network;
    location / {
      proxy_pass https://toodle.i.teich.network:5001;
    }
  }  

  server {
    listen 443;
    server_name code.t.teich.network;
    location / {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header Accept-Encoding gzip;
      proxy_pass http://code-server:8443;
      proxy_set_header Host $host;
    }
  }  

  server {
    listen 443;
    server_name dash.t.teich.network;
    location / {
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_pass https://heimdall:443;
    }
  }  


  server {
    listen 80 default_server;

    server_name _;

    return 301 https://$host$request_uri;
  }
}
